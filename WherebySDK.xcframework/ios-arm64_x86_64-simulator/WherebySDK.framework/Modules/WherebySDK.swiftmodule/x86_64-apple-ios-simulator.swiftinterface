// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
// swift-module-flags: -target x86_64-apple-ios14.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name WherebySDK
import AVKit
import DeveloperToolsSupport
import Foundation
import Photos
import PhotosUI
import Swift
import SwiftUI
import UIKit
import UniformTypeIdentifiers
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public struct LocalizedDescriptionError : Foundation.LocalizedError {
  public let errorDescription: Swift.String?
  public init(_ description: Swift.String)
}
public protocol WherebyRoomViewControllerDelegate : AnyObject {
  func roomViewControllerDidJoinRoom(_ roomViewController: WherebySDK.WherebyRoomViewController)
  func roomViewControllerDidLeave(_ roomViewController: WherebySDK.WherebyRoomViewController)
  func roomViewControllerDidUpdateMicrophoneEnabled(_ roomViewController: WherebySDK.WherebyRoomViewController, isMicrophoneEnabled: Swift.Bool)
  func roomViewControllerDidUpdateCameraEnabled(_ roomViewController: WherebySDK.WherebyRoomViewController, isCameraEnabled: Swift.Bool)
}
@objc @_Concurrency.MainActor @preconcurrency public class WherebyRoomViewController : UIKit.UIViewController {
  @_Concurrency.MainActor @preconcurrency weak public var delegate: (any WherebySDK.WherebyRoomViewControllerDelegate)?
  @_Concurrency.MainActor @preconcurrency public var isMicrophoneEnabled: Swift.Bool {
    get
    set
  }
  @_Concurrency.MainActor @preconcurrency public var isCameraEnabled: Swift.Bool {
    get
    set
  }
  @_Concurrency.MainActor @preconcurrency public func setRoomControlBarIsHidden(_ isHidden: Swift.Bool)
  @_Concurrency.MainActor @preconcurrency public func setRoomInfoIsHidden(_ isHidden: Swift.Bool)
  @_Concurrency.MainActor @preconcurrency public func setSettingsButtonIsHidden(_ isHidden: Swift.Bool)
  @_Concurrency.MainActor @preconcurrency public func setMoreButtonIsHidden(_ isHidden: Swift.Bool)
  @_Concurrency.MainActor @preconcurrency public func setRoomBackgroundColor(_ color: UIKit.UIColor)
  @_Concurrency.MainActor @preconcurrency public func leaveRoom()
  @_Concurrency.MainActor @preconcurrency public init(config: WherebySDK.WherebyRoomConfig, isPushedInNavigationController: Swift.Bool)
  @available(*, unavailable)
  @_Concurrency.MainActor @preconcurrency @objc required dynamic public init?(coder: Foundation.NSCoder)
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public func viewDidLoad()
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public func willMove(toParent parent: UIKit.UIViewController?)
  @objc deinit
  @_Concurrency.MainActor @preconcurrency public func join()
}
extension WherebySDK.WherebyRoomViewController : UIKit.UINavigationControllerDelegate {
  @_Concurrency.MainActor @preconcurrency @objc dynamic public func navigationController(_ navigationController: UIKit.UINavigationController, didShow viewController: UIKit.UIViewController, animated: Swift.Bool)
}
public enum MediaMode {
  case audioOnly
  case video
  public static func == (a: WherebySDK.MediaMode, b: WherebySDK.MediaMode) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
public struct WherebyRoomConfig {
  public var url: Foundation.URL
  public var mediaMode: WherebySDK.MediaMode?
  public var userDisplayName: Swift.String?
  public var skipRoomPushAnimation: Swift.Bool
  public var isLockingSettingsGloballyHidden: Swift.Bool
  public init(url: Foundation.URL, mediaMode: WherebySDK.MediaMode? = nil, skipRoomPushAnimation: Swift.Bool = false, isLockingSettingsGloballyHidden: Swift.Bool = false)
}
extension WherebySDK.MediaMode : Swift.Equatable {}
extension WherebySDK.MediaMode : Swift.Hashable {}
